[{"content":"If you\u0026rsquo;ve got a GPU on your system that you want to run your deep learning model on, you\u0026rsquo;d probably want to check that the library is able to access the GPU. Installation issues/ incorrect setups etc can mean that it\u0026rsquo;s actually inaccessible. I have googled far too many times \u0026lsquo;is tensorflow/pytorch accessing the GPU\u0026rsquo;, so putting this down here so I don\u0026rsquo;t have to go through the same stackoverflow posts again and again üòÖ\nTensorflow (as of version 2.7) import tensorflow as tf assert len(tf.config.list_physical_devices(\u0026#39;GPU\u0026#39;)) \u0026gt; 0 # if your system has GPU(s), tf.config.list_physical_devices(\u0026#39;GPU\u0026#39;) will return a list like so: # [PhysicalDevice(name=\u0026#39;/physical_device:GPU:0\u0026#39;, device_type=\u0026#39;GPU\u0026#39;), ...] # get cuda version-- if you have installed cudatoolkit using conda in your env, # rather than using the global cuda, you can use this to # check the cuda version is what you expect sys_details = tf.sysconfig.get_build_info() cuda_version = sys_details[\u0026#34;cuda_version\u0026#34;] print(cuda_version) # get cudnn version-- if you have installed cudatoolkit using conda in your env, # rather than using the global cudnn, you can # check this version is what you expect cudnn_version = sys_details[\u0026#34;cudnn_version\u0026#34;] print(cudnn_version) Pytorch (as of version 1.10) import torch # this should print True if the GPU is accessible print(torch.cuda.is_available()) Of course, one of the best way to avoid installation issues with a gpu setup and tensorflow/pytorch is using conda. Unfortunately tensorflow is not \u0026lsquo;officially\u0026rsquo; available on conda, and you might not get latest version, and installing extra tensorflow related libraries that are only available through pip such as tensorflow-io could mean the conda installed version of tensorflow that is linked to the cudatoolkit is uninstalled\u0026hellip;\n","permalink":"https://wwymak.github.io/posts/2021-11-13-tf-check-gpu/","summary":"If you\u0026rsquo;ve got a GPU on your system that you want to run your deep learning model on, you\u0026rsquo;d probably want to check that the library is able to access the GPU. Installation issues/ incorrect setups etc can mean that it\u0026rsquo;s actually inaccessible. I have googled far too many times \u0026lsquo;is tensorflow/pytorch accessing the GPU\u0026rsquo;, so putting this down here so I don\u0026rsquo;t have to go through the same stackoverflow posts again and again üòÖ","title":"How to check if your deep learning library is actually using the GPU"},{"content":"In BigQuery, there is the concept of repeated fields and arrays. I was trying to figure out how to count how many entries in a table contain a certain value in that repeated column. And since the syntax [value] IN some_array is not valid, there is one extra that is needed.\nSuppose we have some data around freemium podcast platform. In this platform users can pay for an upgraded service, or listen for free. The users can pay in multiple different ways (e.g. they might subscribe to only certain podcasts, or pay for a \u0026rsquo;everything\u0026rsquo; service). In this first scenario, we have a Users table, with various information about them, the most relevant being user_id (of type string) and subscriptions (repeated array of strings corresponding to names of podcasts or unlimited), and we would like to count users who can access the subscribers only content on the podcasts science weekly and magic101.\nThis can be done as follows:\nWITH EligibilityCounts AS ( SELECT user_id, COUNTIF( sub IN (\u0026#39;science weekly\u0026#39;, \u0026#39;magic101\u0026#39;, \u0026#39;unlimited\u0026#39;)) AS paying_member, FROM `Users` u LEFT JOIN UNNEST(u.subscriptions) sub GROUP BY user_id ) SELECT * FROM EligibilityCounts WHERE paying_member \u0026gt; 0 ","permalink":"https://wwymak.github.io/posts/2021-11-11-bigquery-tips-array-counts/","summary":"In BigQuery, there is the concept of repeated fields and arrays. I was trying to figure out how to count how many entries in a table contain a certain value in that repeated column. And since the syntax [value] IN some_array is not valid, there is one extra that is needed.\nSuppose we have some data around freemium podcast platform. In this platform users can pay for an upgraded service, or listen for free.","title":"How to count occurences in Bigquery Array/Repeated Fields"},{"content":"So, I\u0026rsquo;ve decided to revamp my blog, and rather than going with medium, thought that it\u0026rsquo;s a bit nicer to use my own site as the content remains under my control and I can use markdown. Github has a good set of documentation on setting up a github page, but as I am using Hugo as the static site generator, there are a few extra things I need to add. These are the steps I used to get it all up and running. Maybe someone will find them useful, if not, they\u0026rsquo;ll remind me in the future üëº\n1. Create a personal github pages repo Create a new repo with the name \u0026lt;username\u0026gt;.github.io. For now, best to keep the repo empty, otherwise git might complain later when you try to push your local site code to github.\n2. Setup Hugo If you haven\u0026rsquo;t got Hugo installed already, install it now. On ubuntu, this is really easy since Hugo is available in the software centre. (or you can do sudo apt-get hugo). Next, create a new site with hugo on your local machine with hugo new site \u0026lt;username\u0026gt;.github.io \u0026ndash; this will set up a new folder on your machine with name .github.io (you can use whatever name you want for the folder, but I find it a bit easier to make sure repo names always agree with folder names). init the folder with git and add the remote as origin (cd \u0026lt;username\u0026gt;.github.io \u0026amp;\u0026amp; git init \u0026amp;\u0026amp; git remote add origin git@github.com:\u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.io.git) add a theme\u0026ndash; there\u0026rsquo;s some to select from https://themes.gohugo.io/. Pick one you like, and install it (e.g. git submodule add xxxxx) customize your site config.toml file (there are theme specific stuff options that the theme would have documented, the base hugo ones are here) 3. Setup github actions to automatically deploy your blog In the top level, add a .github folder and a workflows folder inside \u0026ndash; this will store the yaml files that defines tasks github should run when there are updates to the code. Here, I am using two handy github actions: https://github.com/peaceiris/actions-gh-pages and https://github.com/peaceiris/actions-hugo. (there are other interesting things you can do with github actions\u0026ndash; more info from the official docs)\nMy page deploy workflow is as follows\nname: hugo publish # deploy only on publish to main branch on: push: branches: - main jobs: build-deploy: runs-on: ubuntu-20.04 # check out repo steps: - uses: actions/checkout@v2 with: submodules: true fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; #minify the code for the site - name: Build run: hugo --minify # deploy website code to the gh-pages branch , ie github pages will serve the site from gh-pages branch -- you can specify a different branch for this - name: Deploy uses: peaceiris/actions-gh-pages@v3 if: ${{ github.ref == \u0026#39;refs/heads/main\u0026#39; }} with: # you don#t need to define the GITHUB_TOKEN, it\u0026#39;s set automatically by github actions github_token: ${{ secrets.GITHUB_TOKEN }} # the code in ./public is what is pushed to the gh-pages branch publish_dir: ./public emptyCommits: true commitMessage: ${{ github.event.head_commit.message }} 4. Tweak the settings on your repo so the site deploys correctly Go to the github pages settings under your repo settings (e.g. https://github.com/\u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.io/settings/pages) and make sure the branch for the site source is correct. (see image below). On the first push the site takes some time to be published. When this is done you\u0026rsquo;ll see the green tick saying your site is published at xxxx\n5. Inspect your site locally Run hugo server and you should see a local version of your site at http://localhost:1313/ (the cli should tell you the correct localhost port). Now is the time to add customisations as you want. For example, if you find the theme doesn\u0026rsquo;t suit, you can delete the theme folder and install a new one. You might want also want to add a favicon etc.\n6. Push your code to github Once you\u0026rsquo;ve push to the main branch, the gh pages actions we set up earlier will run and after \u0026lt; 30mins your blog should be up and running on xxx.github.io üòÅ\nTips to create a new post, use hugo new blog_post_name.md \u0026ndash; this will automatically create the correct file under /content for your blog remember to change checkt the draft: section in the header\u0026ndash; if this is set to true the default is for Hugo not to render it if you want to use emojis, you need to set enableEmoji = true in your hugo config file for images, you should put them under the static folder, and reference them as ![](image_filename.png) if you want to set up the blog on a custom domain like I\u0026rsquo;ve done here, there are some additional steps to do on both github and your domain name provider\u0026ndash; I will document this in a future post ","permalink":"https://wwymak.github.io/posts/2021-11-05-blog-setup-hugo-github-pages/","summary":"So, I\u0026rsquo;ve decided to revamp my blog, and rather than going with medium, thought that it\u0026rsquo;s a bit nicer to use my own site as the content remains under my control and I can use markdown. Github has a good set of documentation on setting up a github page, but as I am using Hugo as the static site generator, there are a few extra things I need to add. These are the steps I used to get it all up and running.","title":"Blog Setup With Hugo and Github Pages"}]